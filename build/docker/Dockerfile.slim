#FROM node:16-buster-slim
FROM node:16-bookworm-slim
WORKDIR /atomic
COPY . .

RUN apt-get update && apt-get upgrade -y && apt-get -y install unzip git build-essential unzip python3 libxml2 tzdata #libc6-compat python3 #libaio libnsl libc6-compat

RUN npm install -g npm@9.8.1
RUN apt-get install -y libaio1 curl && \
    cd /tmp && \
    curl -o instantclient-basiclite.zip https://download.oracle.com/otn_software/linux/instantclient/instantclient-basic-linuxx64.zip -SL && \
    unzip instantclient-basiclite.zip && \
    mv instantclient*/ /usr/lib/instantclient && \
    rm instantclient-basiclite.zip  && \
    ln -s /usr/lib/instantclient/* /usr/lib

ENV LD_LIBRARY_PATH=/usr/lib/instantclient

## fix cve and atomic common module
RUN npm install body-parser@1.20.2 express@4.18.2 qs@6.5.3 minimatch@3.0.5 \
	atomic-mssql \
	atomic-jetstream \
	atomic-gravity@2.0.13 \
	atomic-org/lru-cache \
	node-red-contrib-cron-plus \
	node-red-contrib-oracledb-mod@0.6.3 \
	node-red-node-mysql \
	atomic-informix@0.0.8

## fix DeprecationWarning: Invalid 'main' field and other bug
RUN cd /atomic/ && \
	cp build/docker/oracledb.js /atomic/node_modules/node-red-contrib-oracledb-mod/lib/ && \
	sed -i 's/main/_main/g' packages/node_modules/@node-red/editor-client/package.json && \
	cd /atomic/node_modules/node-red-contrib-oracledb-mod && \
	grep -r 'placeholder="/path/to/instantclient"' ./* | awk -F':' '{print $1 }' | xargs sed -i 's/placeholder="\/path\/to\/instantclient"/placeholder="\/usr\/lib\/instantclient"/g' && \
	grep -r 'instantclientpath: { value: "" }' ./* | awk -F':' '{print $1 }' | xargs sed -i 's/instantclientpath: { value: "" }/instantclientpath: { value: "\/usr\/lib\/instantclient" }/g' && \
	grep -r 'background: #fff' ./* | awk -F':' '{print $1 }' | xargs sed -i 's/background: #fff//g'
	#sed -i 's/requestingNode.error("Oracle query error: " + err.message + ", errorCode:" + errorCode);/requestingNode.error("Oracle query error: " + err.message + ", errorCode:" + errorCode, msg);/g' ./lib/oracledb.js && \
	#sed -i 's/requestingNode.log("Oracle query no result rows sent");/requestingNode.send(msg);/g' ./lib/oracledb.js




RUN mkdir -p /data/atomic
RUN chmod -R g+rwX /data && chown -R 1001:0 /data
RUN mv ./gitconfig /.gitconfig && cp /.gitconfig ~
RUN rm -rf ./build  ./packages/node_modules/@node-red/editor-client/src


USER 1001
ENV TZ="Asia/Taipei"
ENV NODE_PATH /data/atomic/node_modules
#ENV NODE_RED_ENABLE_PROJECTS=true
ENV ATOMIC_PUBLISH_COMMAND='cd /data/atomic && git add . && git commit -m "updated by atomic" && git push'
ENTRYPOINT [ "npm", "start", "--cache", "/data/atomic/.npm", "--", "--userDir", "/data/atomic", "/data/atomic/flows.json" ]

