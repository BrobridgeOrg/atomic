# Use the official docker image.
image: docker:latest

services:
  - docker:dind

variables:
  CI_REGISTRY: hb.k8sbridge.com
  CI_REGISTRY_USER: robot\$atomic-ci
  CI_REGISTRY_PASSWORD: $REGISTRY_KEY
  PROJECT_ID: atomic
  IMAGE_NAME: atomic
  CI_REGISTRY_IMAGE: $CI_REGISTRY/$PROJECT_ID/$IMAGE_NAME

stages:
  - build
#  - test
  - deploy

docker-build:
  stage: build
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin  https://$CI_REGISTRY
  script:
    - |
      tag="$CI_COMMIT_TAG"
      echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
    - docker build -t "$CI_REGISTRY_IMAGE${tag}" .
    - docker push "$CI_REGISTRY_IMAGE${tag}"
  # Run this job in a branch where a Dockerfile and tag are exists.
  only:
  - tags

#test-stage:
#  stage: test
#  before_script:
#    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#  script: 
#    - |
#      tag=":$CI_COMMIT_REF_SLUG"
#      echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
#    - docker pull "$CI_REGISTRY_IMAGE${tag}"
#    - docker run "$CI_REGISTRY_IMAGE${tag}" echo "Run test in here ... "
#
deploy-stage:
  stage: deploy
  image: alpine:3.15
  only:
  - tags
  script:
  - |
      echo "Deploy stage ... "
      echo "Survey ArgoCD ... "

